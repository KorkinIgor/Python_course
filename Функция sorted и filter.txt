Сортировка - количество элементов не изменяется, элементы изначальной выборки включены в конечную, но меняется порядок элементов по определенному признаку:

[1, 3, 2] -> [1, 2, 3]

Фильтрация - конечная выборка может не включать элементы из первоначальной. Элементы попадают в конечную выборку по определенному признаку.

[1, 2, 3, 4, 5] -> [2 , 4]
---------------------------------------------------------------------------------------------------------------------------------
car = ['lada','bmw', 'mers', 'lamba']

sortide_car = sorted(car)

print(sortide_car)  #['bmw', 'lada', 'lamba', 'mers']
----------------------------------------------------------------------------------------------------------------------------------
car = ['lada','bmw', 'mers', 'lamba']

sortide_car = sorted(car, reverse=reversed)

print(sortide_car)  #['mers', 'lamba', 'lada', 'bmw']
-----------------------------------------------------------------------------------------------------------------------------------
people = [
    {'name':'Igor','age':15},
    {'name':'Lena','age':10},
    {'name':'Vadim','age':30}
]

def sortied_age(person:dict) ->int:
    return person['age']

new_sortied = sorted(people,key=sortied_age)

print(new_sortied)  #[{'name': 'Lena', 'age': 10}, {'name': 'Igor', 'age': 15}, {'name': 'Vadim', 'age': 30}]
-----------------------------------------------------------------------------------------------------------------------------------
people = [
    {'name':'c','age':15},
    {'name':'d','age':10},
    {'name':'a','age':30},
    {'name':'b','age':15}
]

def sortied_age_name(person:dict) -> tuple[int,str]:
    return person['age'],person['name']


new_sortied = sorted(people,key=sortied_age_name)


print(new_sortied)  #[{'name': 'd', 'age': 10}, {'name': 'b', 'age': 15}, {'name': 'c', 'age': 15}, {'name': 'a', 'age': 30}]
-----------------------------------------------------------------------------------------------------------------------------------
number =[1, 2, 3, 4, 5, 6, 7]


def is_evan(n: int) -> bool:
        return n % 2 ==0

new_number =list(filter(is_evan, number))

print(new_number)  #[2, 4, 6]
-----------------------------------------------------------------------------------------------------------------------------
people = [
    {'name':'c','age':10},
    {'name':'d','age':18},
    {'name':'a','age':30},
    {'name':'b','age':15}
]

def filter_people(person:dict) -> bool:
    return person['age'] >= 18

new_people = list(filter(filter_people,people))

print(new_people)  #[{'name': 'd', 'age': 18}, {'name': 'a', 'age': 30}]
-----------------------------------------------------------------------------------------------------------------------------------







